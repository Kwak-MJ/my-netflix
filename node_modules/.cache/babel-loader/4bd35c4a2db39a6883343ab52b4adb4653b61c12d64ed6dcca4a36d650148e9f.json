{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\uCF54\\uB529\\\\web\\\\netflix\\\\src\\\\components\\\\MoviesSlide.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport '../../node_modules/slick-carousel/slick/slick.css';\nimport '../../node_modules/slick-carousel/slick/slick-theme.css';\nimport { ReactComponent as Next } from \"../images/user_image.jpg\";\nimport { ReactComponent as Prev } from \"../images/user_image.jpg\";\nimport styled from \"styled-components\";\nimport styles from \"./MoviesSlide.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst TMDB_KEY = \"14ce3cec0257cafce1c13e8ad25791ef\";\nconst BASE_LANG = \"ko\";\nconst BASE_REGION = \"KR\";\n\n// function NextArrow(props) {\n//   const { className, style, onClick } = props;\n//   return (\n//     <div\n//       className={className}\n//       style={{\n//         ...style,\n//         display: \"block\",\n//         position: \"absolute\",\n//         right: \"3vw\"\n//       }}\n//       onClick={onClick}\n//     />\n//   );\n// }\n\n// function PrevArrow(props) {\n//   const { className, style, onClick } = props;\n//   return (\n//     <div\n//       className={className}\n//       style={{\n//         ...style,\n//         display: \"block\",\n//         position: \"absolute\",\n//         left: \"3vw\"\n//       }}\n//       onClick={onClick}\n//     />\n//   );\n// }\n\nfunction MoviesSlide() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const response = await fetch(`${BASE_URL}/movie/now_playing?api_key=${TMDB_KEY}&language=${BASE_LANG}&region=${BASE_REGION}`);\n    const json = await response.json();\n    setMovies(json.results);\n  };\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 700,\n    slidesToShow: 9,\n    slidesToScroll: 8,\n    nextArrow: /*#__PURE__*/_jsxDEV(Div, {\n      children: /*#__PURE__*/_jsxDEV(Next, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this),\n    prevArrow: /*#__PURE__*/_jsxDEV(DivPre, {\n      children: /*#__PURE__*/_jsxDEV(Prev, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this),\n    responsive: [\n    // 반응형 웹 구현 옵션\n    {\n      breakpoint: 1500,\n      settings: {\n        slidesToShow: 8,\n        slidesToScroll: 7,\n        infinite: true\n      }\n    }, {\n      breakpoint: 1215,\n      // 화면 사이즈\n      settings: {\n        slidesToShow: 6,\n        slidesToScroll: 5,\n        infinite: true\n      }\n    }, {\n      breakpoint: 950,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 4,\n        infinite: true\n      }\n    }, {\n      breakpoint: 800,\n      settings: {\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        infinite: true\n      }\n    }, {\n      breakpoint: 630,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true\n      }\n    }]\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  useEffect(() => {\n    console.log(movies);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      ...settings,\n      children: movies.map(movie => {\n        const imageUrl = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"moviePoster\",\n            className: styles.moviePoster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.posterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: styles.movieTitle,\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.movieVote,\n              children: movie.vote_average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesSlide, \"jPo7B09k0HHweWRYbpaxIdscit8=\");\n_c = MoviesSlide;\n;\nconst Div = styled.div`\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  right: 16px;\n  z-index: 99;\n  text-align: right;\n  line-height: 30px;\n`;\n_c2 = Div;\nconst DivPre = styled.div`\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  left: 16px;\n  z-index: 99;\n  text-align: left;\n  line-height: 30px;\n`;\n_c3 = DivPre;\nexport default MoviesSlide;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MoviesSlide\");\n$RefreshReg$(_c2, \"Div\");\n$RefreshReg$(_c3, \"DivPre\");","map":{"version":3,"names":["useEffect","useState","Slider","ReactComponent","Next","Prev","styled","styles","jsxDEV","_jsxDEV","BASE_URL","TMDB_KEY","BASE_LANG","BASE_REGION","MoviesSlide","_s","movies","setMovies","getMovies","response","fetch","json","results","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","Div","children","fileName","_jsxFileName","lineNumber","columnNumber","prevArrow","DivPre","responsive","breakpoint","console","log","map","movie","imageUrl","poster_path","src","alt","className","moviePoster","posterInfo","movieTitle","title","movieVote","vote_average","id","_c","div","_c2","_c3","$RefreshReg$"],"sources":["C:/코딩/web/netflix/src/components/MoviesSlide.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Slider from \"react-slick\";\r\nimport '../../node_modules/slick-carousel/slick/slick.css';\r\nimport '../../node_modules/slick-carousel/slick/slick-theme.css';\r\n\r\nimport { ReactComponent as Next } from \"../images/user_image.jpg\";\r\nimport { ReactComponent as Prev } from \"../images/user_image.jpg\";\r\nimport styled from \"styled-components\";\r\n\r\nimport styles from \"./MoviesSlide.module.css\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst TMDB_KEY = \"14ce3cec0257cafce1c13e8ad25791ef\";\r\nconst BASE_LANG = \"ko\";\r\nconst BASE_REGION = \"KR\";\r\n\r\n// function NextArrow(props) {\r\n//   const { className, style, onClick } = props;\r\n//   return (\r\n//     <div\r\n//       className={className}\r\n//       style={{\r\n//         ...style,\r\n//         display: \"block\",\r\n//         position: \"absolute\",\r\n//         right: \"3vw\"\r\n//       }}\r\n//       onClick={onClick}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// function PrevArrow(props) {\r\n//   const { className, style, onClick } = props;\r\n//   return (\r\n//     <div\r\n//       className={className}\r\n//       style={{\r\n//         ...style,\r\n//         display: \"block\",\r\n//         position: \"absolute\",\r\n//         left: \"3vw\"\r\n//       }}\r\n//       onClick={onClick}\r\n//     />\r\n//   );\r\n// }\r\n\r\nfunction MoviesSlide() {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const getMovies = async () => {\r\n    const response = await fetch(\r\n      `${BASE_URL}/movie/now_playing?api_key=${TMDB_KEY}&language=${BASE_LANG}&region=${BASE_REGION}`\r\n    );\r\n    const json = await response.json();\r\n    setMovies(json.results);\r\n  }\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 700,\r\n    slidesToShow: 9,\r\n    slidesToScroll: 8,\r\n    nextArrow: (\r\n      <Div>\r\n        <Next />\r\n      </Div>\r\n    ),\r\n    prevArrow: (\r\n      <DivPre>\r\n        <Prev />\r\n      </DivPre>\r\n    ),\r\n    responsive: [ // 반응형 웹 구현 옵션\r\n      {\r\n        breakpoint: 1500,\r\n        settings: {\r\n          slidesToShow: 8,\r\n          slidesToScroll: 7,\r\n          infinite: true,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1215, // 화면 사이즈\r\n        settings: {\r\n          slidesToShow: 6,\r\n          slidesToScroll: 5,\r\n          infinite: true,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 950,\r\n        settings: {\r\n          slidesToShow: 5,\r\n          slidesToScroll: 4,\r\n          infinite: true,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 800,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 4,\r\n          infinite: true,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 630,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, [])\r\n  useEffect(() => {\r\n    console.log(movies);\r\n  },);\r\n\r\n  return (\r\n    <div>\r\n      <Slider {...settings}>\r\n        {movies.map((movie) => {\r\n          const imageUrl = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\r\n          return (\r\n            <div key={movie.id}>\r\n              <img src={imageUrl} alt=\"moviePoster\" className={styles.moviePoster} />\r\n              <div className={styles.posterInfo}>\r\n                <h2 className={styles.movieTitle}>{movie.title}</h2>\r\n                <span className={styles.movieVote}>{movie.vote_average}</span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </Slider>\r\n    </div>\r\n\r\n  )\r\n};\r\n\r\nconst Div = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  position: absolute;\r\n  right: 16px;\r\n  z-index: 99;\r\n  text-align: right;\r\n  line-height: 30px;\r\n`;\r\nconst DivPre = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  position: absolute;\r\n  left: 16px;\r\n  z-index: 99;\r\n  text-align: left;\r\n  line-height: 30px;\r\n`;\r\n\r\nexport default MoviesSlide;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}