[{"C:\\코딩\\web\\netflix\\src\\index.js":"1","C:\\코딩\\web\\netflix\\src\\App.js":"2","C:\\코딩\\web\\netflix\\src\\routes\\Home.js":"3","C:\\코딩\\web\\netflix\\src\\components\\Navigation.js":"4","C:\\코딩\\web\\netflix\\src\\routes\\Movies.js":"5","C:\\코딩\\web\\netflix\\src\\routes\\Series.js":"6","C:\\코딩\\web\\netflix\\src\\components\\HomeMain.js":"7","C:\\코딩\\web\\netflix\\src\\components\\MovieInfo.js":"8","C:\\코딩\\web\\netflix\\src\\components\\MoviesSlide1.js":"9","C:\\코딩\\web\\netflix\\src\\components\\MoviesSlide2.js":"10"},{"size":332,"mtime":1695930483402,"results":"11","hashOfConfig":"12"},{"size":711,"mtime":1695930612734,"results":"13","hashOfConfig":"12"},{"size":379,"mtime":1695909040223,"results":"14","hashOfConfig":"12"},{"size":997,"mtime":1693559645937,"results":"15","hashOfConfig":"12"},{"size":89,"mtime":1693509047319,"results":"16","hashOfConfig":"12"},{"size":89,"mtime":1693509125391,"results":"17","hashOfConfig":"12"},{"size":448,"mtime":1694092765803,"results":"18","hashOfConfig":"12"},{"size":4192,"mtime":1695910457124,"results":"19","hashOfConfig":"12"},{"size":3690,"mtime":1695908645599,"results":"20","hashOfConfig":"12"},{"size":3520,"mtime":1695908841989,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s96nq3",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\코딩\\web\\netflix\\src\\index.js",[],[],"C:\\코딩\\web\\netflix\\src\\App.js",[],[],"C:\\코딩\\web\\netflix\\src\\routes\\Home.js",[],[],"C:\\코딩\\web\\netflix\\src\\components\\Navigation.js",[],[],"C:\\코딩\\web\\netflix\\src\\routes\\Movies.js",[],[],"C:\\코딩\\web\\netflix\\src\\routes\\Series.js",[],[],"C:\\코딩\\web\\netflix\\src\\components\\HomeMain.js",[],[],"C:\\코딩\\web\\netflix\\src\\components\\MovieInfo.js",["53","54","55"],[],"import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport styles from \"./MovieInfo.module.css\"\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst TMDB_KEY = \"14ce3cec0257cafce1c13e8ad25791ef\";\r\nconst BASE_LANG = \"ko\";\r\nconst BASE_REGION = \"KR\";\r\n\r\nfunction MovieInfo() {\r\n  const { id } = useParams();\r\n  const ref = useRef(null);\r\n  const [info, setInfo] = useState([]);\r\n  const [credit, setCredit] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getInfo = async () => {\r\n    const response = await fetch(\r\n      `${BASE_URL}/movie/${id}?api_key=${TMDB_KEY}&language=${BASE_LANG}&region=${BASE_REGION}`\r\n    );\r\n    const json = await response.json();\r\n    setInfo(json);\r\n    setLoading(false);\r\n  }\r\n\r\n  const getCredit = async () => {\r\n    const response = await fetch(\r\n      `${BASE_URL}/movie/${id}/credits?api_key=${TMDB_KEY}&language=${BASE_LANG}&region=${BASE_REGION}`\r\n    );\r\n    const json = await response.json();\r\n    setCredit(json.cast);\r\n  }\r\n\r\n  const imgChar = () => {\r\n    const imgArray = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const imgPath = credit[i].profile_path;\r\n      const imageChar = `https://image.tmdb.org/t/p/original${imgPath}`;\r\n      imgArray.push(<img ref={ref} className={styles.charImg} key={credit[i].id} src={imageChar} />);\r\n    }\r\n    return imgArray;\r\n  }\r\n\r\n  const nameChar = () => {\r\n    const nameArray = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      nameArray.push(\r\n        <span className={styles.charName}>\r\n          {credit[i].name}\r\n        </span>);\r\n    }\r\n    return nameArray;\r\n  }\r\n\r\n  const infoChar = () => {\r\n    const imgArray = imgChar();\r\n    const nameArray = nameChar();\r\n    const infoCharDiv = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      infoCharDiv.push(\r\n        <div className={styles.eachCharInfo}>\r\n          {imgArray[i]}\r\n          {nameArray[i]}\r\n        </div>\r\n      )\r\n    }\r\n    return infoCharDiv;\r\n  }\r\n\r\n\r\n\r\n  const imageUrl = `https://image.tmdb.org/t/p/original${info.poster_path}`;\r\n\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getCredit();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (<h1>Loading...</h1>) : (\r\n        <div className={styles.main}>\r\n          <div className={styles.content}>\r\n            <img className={styles.infoPoster} src={imageUrl} alt=\"infoPoster\" />\r\n            <div className={styles.info}>\r\n              <div className={styles.infoContent}>\r\n                <h2 className={styles.infoTitle}>{info.title}</h2>\r\n                <ul>\r\n                  <li><span style={{ fontSize: \"20px\", fontWeight: \"600\" }}>기본정보</span></li>\r\n                  <li><span className={styles.infoBasic}>개요</span>\r\n                    {info.genres.map((genre) => (\r\n                      <span className={styles.infoOutline} key={genre.id}>{genre.name}</span>\r\n                    ))}\r\n                    <span className={styles.infoTime}>{info.runtime}분</span></li>\r\n                  <li><span className={styles.infoBasic}>개봉</span>\r\n                    <span className={styles.infoDate}>{info.release_date}</span></li>\r\n                  <li><span className={styles.infoBasic}>평점</span>\r\n                    <span className={styles.infoVote} style={{ color: \"tomato\" }}>★</span><span className={styles.infoVote}>{info.vote_average === 0 ? \"new\" : info.vote_average}</span></li>\r\n                </ul>\r\n              </div>\r\n              <div className={styles.infoOverview}>\r\n                <p>{info.overview}</p>\r\n              </div>\r\n              <div className={styles.infoChar}>\r\n                {infoChar()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              background: `linear-gradient(to left, rgba(0, 0, 0, 0.800), rgba(0, 0, 0, 0.800)), url(${imageUrl})`,\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"top\"\r\n            }}\r\n            className={styles.background}\r\n          >\r\n          </div>\r\n        </div>\r\n\r\n\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfo;","C:\\코딩\\web\\netflix\\src\\components\\MoviesSlide1.js",[],[],"C:\\코딩\\web\\netflix\\src\\components\\MoviesSlide2.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":39,"column":21,"nodeType":"58","endLine":39,"endColumn":100},{"ruleId":"59","severity":1,"message":"60","line":77,"column":6,"nodeType":"61","endLine":77,"endColumn":8,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":81,"column":6,"nodeType":"61","endLine":81,"endColumn":8,"suggestions":"64"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has a missing dependency: 'getCredit'. Either include it or remove the dependency array.",["66"],{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [getInfo]",{"range":"71","text":"72"},"Update the dependencies array to be: [getCredit]",{"range":"73","text":"74"},[2114,2116],"[getInfo]",[2165,2167],"[getCredit]"]